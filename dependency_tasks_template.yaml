AWSTemplateFormatVersion: '2010-09-09'
Description: >
  digitization-tasks

  Creates Asana tasks for new GitHub dependency pull requests.

Parameters:
  ApplicationEnvironment:
    Type: String
    Description: Environment in which the application should be deployed.
    AllowedValues:
      - dev
      - prod
  ApplicationName:
    Type: String
    Description: Name of the application to be deployed.
    Default: dependency_tasks
  AsanaAccessToken:
    Type: String
    Description: Access token for Asana.
  GithubAppId:
    Type: String
    Description: ID for Github app.
  GithubAppInstallationId:
    Type: String
    Description: Installation ID for Github app.
  GithubAppPrivateKey:
    Type: String
    Description: Private Key for Github app.

Mappings:
  Asana:
    ProjectId:
      dev: 1200689146072873
      prod: 1200689146072873
    SectionId:
      dev: 1200689146072874
      prod: 1200689146072874
  Github:
    OrgName:
      dev: "RockefellerArchiveCenter"
      prod: "RockefellerArchiveCenter"

Resources:
  DependencyTasksFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Description: !Sub 'Allows ${ApplicationName} lambda to be executed successfully.'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DependencyTasksParameterStorePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:GetParametersByPath*'
                  - 'ssm:PutParameter'
                Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${ApplicationEnvironment}/${ApplicationName}*'

  AsanaAccessTokenParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Token for Asana client.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/ASANA_ACCESS_TOKEN
      Tags:
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !Ref AsanaAccessToken

  AsanaProjectIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Asana project ID in which new tasks should be created.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/ASANA_PROJECT_ID
      Tags:
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !FindInMap [Asana, ProjectId, !Ref ApplicationEnvironment]

  AsanaSectionIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Asana section ID under which new tasks should be created.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/ASANA_SECTION_ID
      Tags:
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !FindInMap [Asana, SectionId, !Ref ApplicationEnvironment]

  GithubAppIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: ID for Github App.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/GITHUB_APP_ID
      Tags:
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !Ref GithubAppId

  GithubAppInstallationIdParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Installation ID for Github App.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/GITHUB_APP_INSTALLATION_ID
      Tags:
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !Ref GithubAppInstallationId

  GithubAppPrivateKeyParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Private Key for Github App.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/GITHUB_APP_PRIVATE_KEY
      Tags:
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !Ref GithubAppPrivateKey

  GithubOrgNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Organization name for Github organizational account.
      Name: !Sub /${ApplicationEnvironment}/${ApplicationName}/GITHUB_ORG_NAME
      Tags:
        Environment: !Ref ApplicationEnvironment
        Application: !Ref ApplicationName
      Type: String
      Value: !FindInMap [Github, OrgName, !Ref ApplicationEnvironment]

  DependencyTasksFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Sub 'rac-${ApplicationEnvironment}-lambda'
        S3Key: !Sub '${ApplicationName}.zip'
      FunctionName: !Ref ApplicationName
      Handler: create_dependency_tasks.main
      Role: !GetAtt DependencyTasksFunctionRole.Arn
      Runtime: python3.11
      Timeout: 330
      Environment:
        Variables:
          ENV:
            Ref: ApplicationEnvironment
          APP_CONFIG_PATH:
            Ref: ApplicationName
      Architectures:
        - x86_64
      Tags:
        - Key: Environment
          Value: !Ref ApplicationEnvironment
        - Key: Application
          Value: !Ref ApplicationName

  DependencyTasksEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Runs on the first Monday of each month"
      Name: first_monday_of_month
      ScheduleExpression: "cron(0 2 ? * 2#1 *)"
      State: "ENABLED"
      Targets:
        - Arn: !GetAtt DependencyTasksFunction.Arn
          Id: "DependencyTasks"

  DependencyTasksEventRulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DependencyTasksFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt DependencyTasksEventRule.Arn

  DependencyTasksTravisEcRPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DependencyTasksFunction
      Action: "lambda:UpdateFunctionCode"
      Principal: "arn:aws:iam::817658541382:user/TravisECR"

  DependencyTasksLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${DependencyTasksFunction}"
      RetentionInDays: 90

Outputs:
  DependencyTasksFunction:
    Description: "Dependency Tasks Lambda Function ARN"
    Value: !GetAtt DependencyTasksFunction.Arn
